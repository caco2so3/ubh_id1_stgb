import os
import json
import asyncio
from shared.config import (
    TELEGRAM_TOKEN, DATABASE_DIR, DATA_DIR, LOGS_DIR,
    USER_DB_PATH, SHIFTS_DB_PATH, EMPLOYEES_DB_PATH, LOG_FILE_PATH
)
from shared.logger import logger
from tg_bot.bot import run_bot
from calendar_uploader.uploader import run_uploader

if not TELEGRAM_TOKEN:
    logger.critical("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    raise ValueError("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")

def init_project_structure():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã"""
    for directory in [DATABASE_DIR, DATA_DIR, LOGS_DIR]:
        if not os.path.exists(directory):
            os.makedirs(directory)
            logger.info(f"–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")

    json_files = {
        USER_DB_PATH: {},
        SHIFTS_DB_PATH: [],
        EMPLOYEES_DB_PATH: {"employees": []}
    }

    for file_path, default_content in json_files.items():
        if not os.path.exists(file_path):
            with open(file_path, 'w', encoding='utf-8') as f:
                json.dump(default_content, f, ensure_ascii=False, indent=2)
            logger.info(f"–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: {file_path}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    logger.info("–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã Barhub...")
    logger.debug("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞...")
    
    init_project_structure()
    
    logger.info("Barhub —Å—Ç–∞—Ä—Ç—É–µ—Ç üöÄ")
    logger.debug("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –∞–ø–ª–æ—É–¥–µ—Ä–∞...")
    
    await asyncio.gather(
        run_bot(),
        run_uploader()
    )

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:", exc_info=True)
        raise
